#:kivy 1.0
#:import SlideTransition kivy.uix.screenmanager.SlideTransition
#:import dirname os.path.dirname
#:import expanduser os.path.expanduser
<RootWidget>:
	GridLayout:
		cols: 1
		rows: 2
		BoxLayout:
			orientation: 'horizontal'
			padding: 50
			spacing: 30
			Image:
				source: '../assets/institution_logo.png'
				size_hint: self.image_ratio,1
				valign: 'bottom'
			Label:
				text: app.get_string('letsspell')
				text_size: root.width, 250
				size_hint: 2,1
				halign: 'center'
				valign: 'bottom'
				font_size: '50sp'
				#font_name: 'HOS.ttf'
				line_height: 2
			Image:
				source: '../assets/english_event_logo.png'
				size_hint: self.image_ratio,1
				valign: 'bottom'
		BoxLayout:
			orientation: 'horizontal'
			padding: 50
			spacing: 30
			Spinner:
				id: 'sp_grade'
				text: app.get_string('grade')
				values: app.sp_grades
				size_hint: 1,0.5
				on_text: app.set_grade(self.text)
			Spinner:
				id: 'sp_level'
				text: app.get_string('level_list')[0]
				values: app.sp_levels
				size_hint: 1,0.5
				on_text: app.set_level(self.text.lower())
			BoxLayout:
				orientation: 'vertical'
				size_hint: 1,1.2
				Label:
					id: 'lbl_wordcount'
					text: app.word_count
					halign: 'right'
					valign: 'bottom'
					font_size: '20sp'
					size_hint: 1,0.2
				Label:
					id: 'lbl_selwordcount'
					text: app.sel_word_count
					halign: 'right'
					valign: 'bottom'
					font_size: '20sp'
					size_hint: 1,0.2
				Spinner:
					id: 'sp_sort'
					size_hint: 1,0.2
					text: app.get_string('contest')
					values: (app.get_string('contest'), app.get_string('alphabetic'), app.get_string('random'))
					on_text: app.sel_mode = self.text
				Button:
					size_hint: 1,0.8
					text: app.get_string('start')
					on_release: app.start()
					#background_normal: '../assets/green_button.png'
					#background_down: '../assets/green_button_pressed.png'

<TitleCardWidget>:
	canvas:
		Color:
			rgba: 0.8,0.8,0.8,1
	FloatLayout:
		size: root.size
		ImageButton:
			id: 'img_contestants'
			pos_hint: {'center_x':0.5,'center_y':0.5}
			size_hint: 1,1/self.image_ratio
			source: root.img_source
			on_release: root.goto_cards()
<CardWidget>:
	canvas:
		Color:
			rgba: 0.8,0.8,0.8,1
		Rectangle:
			size: self.width, self.height
	FloatLayout:
		#Button:
		#	pos_hint: {'top':1}
		#	size_hint: 0.2,0.2
		#	source: 'assets/Royal-Bee-2016.png'
		size: root.size
		BoxLayout:
			id: boxes
			padding: 5
			spacing: 10
			pos_hint: {'top':1}
			size_hint: 1,0.02
			canvas:
				Color:
					rgba: 0,0,0,1
				Rectangle:
					size: self.size
		Image:
			pos_hint: {'top':0.95,'x':0}
			source: '../assets/institution_logo.png'
			size_hint: 0.3,0.3/self.image_ratio
		ImageButton:
			pos_hint: {'top':0.95,'x':0.7}
			source: '../assets/english_event_logo.png'
			size_hint: 0.3,0.3/self.image_ratio
			on_release: root.next_word()
		Label:
			id: lbl_word
			text: root.word
			text_size: self.width, None
			font_size: root.word_size
			max_lines: 1
			valign: 'middle'
			halign: 'center'
			pos_hint: {'center_x':0.5,'center_y':0.7}
			color: 0,0,0,1
		Label:
			padding_x: 30
			text: app.get_string("definition")
			text_size: self.width, None
			font_size: '30sp'
			valign: 'middle'
			halign: 'left'
			pos_hint: {'center_x':0.5,'center_y':0.5}
			color: 0,0,.5,1
		Label:
			text: root.definition
			text_size: self.width, None
			font_size: root.announcement_size
			valign: 'middle'
			halign: 'center'
			pos_hint: {'center_x':0.5,'center_y':0.4}
			color: 0,0,.8,1
		Label:
			padding_x: 30
			text: app.get_string("samples")
			text_size: self.width, None
			font_size: '30sp'
			valign: 'middle'
			halign: 'left'
			pos_hint: {'center_x':0.5,'center_y':0.3}
			color: 0,.5,0,1
		Label:
			text: root.sentence1
			text_size: self.width, None
			font_size: root.announcement_size
			valign: 'middle'
			halign: 'center'
			pos_hint: {'center_x':0.5,'center_y':0.25}
			color: 0,.8,0,1
		Label:
			text: root.sentence2
			text_size: self.width, None
			font_size: '30sp'
			valign: 'middle'
			halign: 'center'
			pos_hint: {'center_x':0.5,'center_y':0.20}
			color: 0,.8,0,1
		Label:
			id: lbl_accent_lbl
			padding_x: 30
			text: root.accent_lbl
			text_size: self.width, None
			font_size: '30sp'
			valign: 'middle'
			halign: 'left'
			pos_hint: {'center_x':0.5,'center_y':0.12}
			color: 0,0,.5,1
		Label:
			text: root.accent_type
			text_size: self.width, None
			font_size: '30sp'
			valign: 'middle'
			halign: 'center'
			pos_hint: {'center_x':0.5,'center_y':0.08}
			color: 0,0,.8,1
		Label:
			text: root.level
			text_size: self.width, None
			font_size: '24sp'
			valign: 'middle'
			halign: 'center'
			pos_hint: {'center_x':0.5,'center_y':0.95}
		Button:
			text: root.next_button_text
			valign: 'bottom'
			halign: 'right'
			size_hint: 0.18,0.18
			pos_hint: {'right':1,'top':0.18}
			on_release: root.next_level()
			background_normal: '../assets/green_button.png'
			background_down: '../assets/green_button_pressed.png'

<Label>:
	font_name: '../assets/OD3BOLD.ttf'

<LoadDialog>:
	BoxLayout:
		size: root.size
		pos: root.pos
		orientation: "vertical"
		FileChooserListView:
			id: filechooser
			filters: ['*.xls','*.xlsx']
			path: expanduser('~')
		BoxLayout:
			size_hint_y: None
			height: 30
			Button:
				text: app.get_string("cancel")
				on_release: root.cancel()

			Button:
				text: app.get_string("load")
				on_release: root.load(filechooser.path, filechooser.selection)

BoxLayout:
	orientation: 'vertical'
	canvas.before:
		Color:
			rgb: .6, .6, .6
		Rectangle:
			size: self.size
	ActionBar:
		pos_hint: {'top':1}
		background_image: '../assets/white-bg.png'
		background_color: .6,.6,.6,1
		ActionView:
			use_separator: True
			ActionPrevious:
				title: app.get_string('title')
				with_previous: False
				app_icon: '../assets/english_event_logo.png'
				on_release: app.back()
			ActionGroup:
				text: app.get_string('file')
				mode: 'spinner'
				size_hint_x: None
				width: 90
				ActionButton:
					text: app.get_string('new')
					on_release: app.clear_db()
				ActionButton:
					text: app.get_string('open')
					on_release: app.open_file()
				ActionButton:
					text: app.get_string('quit')
					on_release: app.stop()

	ScreenManager:
		id: sm
		transition: SlideTransition()
